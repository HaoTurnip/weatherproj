rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isCommentOwner(commentData) {
      return isAuthenticated() && request.auth.uid == commentData.userId;
    }

    // Alerts collection rules
    match /alerts/{alertId} {
      allow read: if true;  // Anyone can read alerts
      allow create: if isAuthenticated();  // Only authenticated users can create alerts

      // Allow update if:
      // - The owner is updating anything
      // - Any authenticated user is only updating upvotes/downvotes
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        (
          request.resource.data.keys().hasOnly(['upvotes', 'downvotes', 'updatedAt']) &&
          (!('userId' in resource.data) || getAfter().data.userId == resource.data.userId) &&
          (!('title' in resource.data) || getAfter().data.title == resource.data.title) &&
          (!('description' in resource.data) || getAfter().data.description == resource.data.description) &&
          (!('type' in resource.data) || getAfter().data.type == resource.data.type) &&
          (!('severity' in resource.data) || getAfter().data.severity == resource.data.severity) &&
          (!('location' in resource.data) || getAfter().data.location == resource.data.location) &&
          (!('startTime' in resource.data) || getAfter().data.startTime == resource.data.startTime) &&
          (!('endTime' in resource.data) || getAfter().data.endTime == resource.data.endTime)
        )
      );

      allow delete: if isAuthenticated() && request.auth.uid == resource.data.userId;  // Only the creator can delete their alerts
      
      // Comments subcollection rules
      match /comments/{commentId} {
        allow read: if true;  // Anyone can read comments
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
        allow update: if isOwner(resource.data.userId);
        allow delete: if isOwner(resource.data.userId);
      }
    }

    // User profiles - allow public read, only owner can write
    match /users/{userId} {
      allow read: if true; // Anyone can read user profiles
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // User settings - only owner can read/write
    match /users/{userId}/settings/{docId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // User activity collection rules
    match /user_activity/{activityId} {
      allow read, write: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
  }
} 